const { SlashCommandBuilder, EmbedBuilder, PermissionFlagsBits } = require('discord.js');
const config = require('../config/config.js');

module.exports = {
    data: new SlashCommandBuilder()
        .setName('botstatus')
        .setDescription('[Admin] Xem tr·∫°ng th√°i chi ti·∫øt c·ªßa bot')
        .setDefaultMemberPermissions(PermissionFlagsBits.Administrator),

    async execute(interaction) {
        // Check if user has administrator permission
        if (!interaction.member.permissions.has(PermissionFlagsBits.Administrator)) {
            const noPermEmbed = new EmbedBuilder()
                .setTitle('‚ùå Kh√¥ng c√≥ quy·ªÅn')
                .setDescription('Ch·ªâ admin m·ªõi c√≥ th·ªÉ xem tr·∫°ng th√°i chi ti·∫øt c·ªßa bot.')
                .setColor(config.COLORS.ERROR)
                .setTimestamp();

            return interaction.reply({ embeds: [noPermEmbed], ephemeral: true });
        }

        try {
            // Get detailed bot status
            const uptime = process.uptime();
            const memoryUsage = process.memoryUsage();
            
            const statusEmbed = new EmbedBuilder()
                .setTitle('ü§ñ GDVN Bot - Tr·∫°ng th√°i chi ti·∫øt')
                .setColor(config.COLORS.PRIMARY)
                .addFields(
                    {
                        name: '‚è±Ô∏è Uptime',
                        value: `${Math.floor(uptime / 3600)}h ${Math.floor((uptime % 3600) / 60)}m ${Math.floor(uptime % 60)}s`,
                        inline: true
                    },
                    {
                        name: 'üíæ RAM Usage',
                        value: `${Math.round(memoryUsage.rss / 1024 / 1024)} MB`,
                        inline: true
                    },
                    {
                        name: 'üè† Servers',
                        value: `${interaction.client.guilds.cache.size}`,
                        inline: true
                    },
                    {
                        name: 'üë• Users',
                        value: `${interaction.client.guilds.cache.reduce((acc, guild) => acc + guild.memberCount, 0)}`,
                        inline: true
                    },
                    {
                        name: 'üìù Commands',
                        value: `${interaction.client.commands.size}`,
                        inline: true
                    },
                    {
                        name: 'üèì Ping',
                        value: `${Math.round(interaction.client.ws.ping)}ms`,
                        inline: true
                    },
                    {
                        name: 'üöÄ Features',
                        value: '‚Ä¢ Demon List Integration\n‚Ä¢ AI Chatbot (Local + OpenAI)\n‚Ä¢ Level Search & Info\n‚Ä¢ Statistics Tracking\n‚Ä¢ 24/7 Keep-Alive System',
                        inline: false
                    },
                    {
                        name: 'üîß System Info',
                        value: `Node.js: ${process.version}\nPlatform: ${process.platform}\nEnvironment: ${process.env.NODE_ENV || 'development'}`,
                        inline: false
                    }
                )
                .setFooter({
                    text: 'GDVN Bot Status ‚Ä¢ Admin Only',
                    iconURL: interaction.client.user.displayAvatarURL()
                })
                .setTimestamp();

            await interaction.reply({ embeds: [statusEmbed], ephemeral: true });

        } catch (error) {
            console.error('Bot status command error:', error);
            
            const errorEmbed = new EmbedBuilder()
                .setTitle('‚ùå L·ªói H·ªá Th·ªëng')
                .setDescription('Kh√¥ng th·ªÉ l·∫•y tr·∫°ng th√°i bot.')
                .setColor(config.COLORS.ERROR)
                .setTimestamp();

            await interaction.reply({ embeds: [errorEmbed], ephemeral: true });
        }
    }
};